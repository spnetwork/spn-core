#!/bin/bash

# Copyright 2018 Stellar Development Foundation and contributors. Licensed
# under the Apache License, Version 2.0. See the COPYING file at the root
# of this distribution or at http://www.apache.org/licenses/LICENSE-2.0

set -e
export COMMAND="$1"
if [[ -z "$NUM_PARTITIONS" ]]; then
    NUM_PARTITIONS=1
fi
if [[ -z "$RUN_PARTITIONS" ]]; then
    RUN_PARTITIONS=$(seq 0 $((NUM_PARTITIONS-1)));
fi
if [[ -z "$TEST_SPEC" ]]; then
    TEST_SPEC="~[.]" # All non-hidden tests by default
fi
if [[ -z "$BATCHSIZE" ]]; then
    # number of tests to run per run per job slot
    BATCHSIZE=5
fi
if [[ -z "$RND_SEED" ]]; then
    RND_SEED=1
fi

cleanup() {
    rm -rf $TEST_PARTITIONS_DIR
}
TEST_PARTITIONS_DIR=$(mktemp -d ./test-partitions.XXXXXXXX)
trap cleanup 0 2 15 ERR

perl -e '
         use List::Util qw/shuffle/;
         srand($ARGV[3]);
         my $num_partitions = $ARGV[0];
         my $test_spec = $ARGV[1];
         my $test_partitions_dir = $ARGV[2];
         my @all_tests = shuffle `./spn-core --ll FATAL --test --list-test-names-only $test_spec`;
         for (my $p = 0; $p < $num_partitions; $p++) {
             die "Invalid test name \"$p\"" if $p =~ /[^A-Za-z0-9 _()]/;
             open(my $out, ">", "$test_partitions_dir/test-partition-$p.txt");
             for (my $i = $p; $i < @all_tests; $i+=$num_partitions) {
                 print $out $all_tests[$i];
             }
             close $out;
         }' -- "$NUM_PARTITIONS" "$TEST_SPEC" "$TEST_PARTITIONS_DIR" "$RND_SEED"

runpart()
{
  local PART=$1
  shift
  C=""
  for i in "$@"
  do
    C="$i,$C"
  done
  "$COMMAND" $((50*(PART-1))) "$C"
  exit $?
}

export -f runpart

TESTS=$TEST_PARTITIONS_DIR/test-list.txt
for i in $RUN_PARTITIONS; do
  nparts=$((nparts+1))
  cat $TEST_PARTITIONS_DIR/test-partition-$i.txt >> $TESTS
done

cat $TESTS | parallel -j $nparts -n $BATCHSIZE --line-buffer --tag-string '{%}' --progress --halt-on-error 2 runpart '{%}' "{}"

